{"ast":null,"code":"var _jsxFileName = \"/run/media/pearlquest/DATA/rezdyV2/rezdy-ksa/src/Components/LangSelector.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Select from \"./Select/SelectBox\"; //import Select, { ActionMeta, OptionTypeBase } from \"react-select\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst users = [{\n  name: \"English\",\n  label: \"English\",\n  id: 1\n}, {\n  name: \"Italian\",\n  label: \"Italian\",\n  id: 2\n}, {\n  name: \"French\",\n  label: \"French\",\n  id: 3\n}, {\n  name: \"German\",\n  label: \"German\",\n  id: 4\n}, {\n  name: \"Spanish\",\n  label: \"Spanish\",\n  id: 5\n}, {\n  name: \"Japanese\",\n  label: \"Japanese\",\n  id: 6\n}, {\n  name: \"Hebrew\",\n  label: \"Hebrew\",\n  id: 7\n}, {\n  name: \"Korean\",\n  label: \"Korean\",\n  id: 8\n}, {\n  name: \"Turkish\",\n  label: \"Turkish\",\n  id: 9\n}, {\n  name: \"Urdu\",\n  label: \"Urdu\",\n  id: 10\n}, {\n  name: \"Chinese\",\n  label: \"Chinese\",\n  id: 11\n}, {\n  name: \"Tagalog\",\n  label: \"Tagalog\",\n  id: 12\n}, {\n  name: \"Bahasa\",\n  label: \"Bahasa\",\n  id: 13\n}];\n/*const SelectUserButton: React.FunctionComponent<SelectButtonProps> = ({\n  onSelect,\n  languageOptions,\n  stateId,\n}) => {\n  const options: OptionTypeBase[] = languageOptions.map(\n    (user: LanguageOption) => ({\n      label: user.name,\n      value: user.id,\n    })\n  );\n\n  const handleChange = (\n    option: OptionTypeBase,\n    meta: ActionMeta<any>\n  ): void => {\n    console.log({ option, meta });\n    onSelect({\n      name: option.label,\n      id: option.value,\n    });\n  };\n\n  return (\n    <div className=\"select__user\">\n      <Select\n        name=\"user\"\n        options={options}\n        onChange={handleChange}\n        maxMenuHeight={120}\n        placeholder={stateId}\n        //defaultValue={}\n      />\n    </div>\n  );\n};*/\n\nexport default function LangSelector() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(users[0]);\n  return /*#__PURE__*/_jsxDEV(Select //className=\"flex-1\"\n  , {\n    options: users,\n    selectedOption: currentUser,\n    handelChange: event => {\n      console.log(\"parent\", event);\n      setCurrentUser(event);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this)\n  /*<SelectUserButton\n    stateId={stateId}\n    languageOptions={users}\n    onSelect={(user) => {\n      console.log(\"you have selected user \" + user.name);\n      Store.setLanguage(user.name);\n    }}\n  />*/\n  ;\n}\n\n_s(LangSelector, \"1xv1EoxWwbr3lN/q3aFayKhRqIM=\");\n\n_c = LangSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"LangSelector\");","map":{"version":3,"sources":["/run/media/pearlquest/DATA/rezdyV2/rezdy-ksa/src/Components/LangSelector.tsx"],"names":["React","useState","Select","users","name","label","id","LangSelector","currentUser","setCurrentUser","event","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,oBAAnB,C,CAEA;;;AAaA,MAAMC,KAAuB,GAAG,CAC9B;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CAD8B,EAM9B;AACEF,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CAN8B,EAW9B;AACEF,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CAX8B,EAgB9B;AACEF,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CAhB8B,EAqB9B;AACEF,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CArB8B,EA0B9B;AACEF,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CA1B8B,EA+B9B;AACEF,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CA/B8B,EAoC9B;AACEF,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CApC8B,EAyC9B;AACEF,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CAzC8B,EA8C9B;AACEF,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CA9C8B,EAmD9B;AACEF,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CAnD8B,EAwD9B;AACEF,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CAxD8B,EA6D9B;AACEF,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,EAAE,EAAE;AAHN,CA7D8B,CAAhC;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAACE,KAAK,CAAC,CAAD,CAAN,CAA9C;AAEA,sBACE,QAAC,MAAD,CACI;AADJ;AAGI,IAAA,OAAO,EAAEA,KAHb;AAII,IAAA,cAAc,EAAEK,WAJpB;AAKI,IAAA,YAAY,EAAGE,KAAD,IAAW;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACAD,MAAAA,cAAc,CAACC,KAAD,CAAd;AACD;AARL;AAAA;AAAA;AAAA;AAAA;AAUA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAlBE;AAoBD;;GAvBuBH,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Store } from \"../System/Stores\";\nimport Select from \"./Select/SelectBox\";\n\n//import Select, { ActionMeta, OptionTypeBase } from \"react-select\";\n\ninterface LanguageOption {\n  name: string;\n  id: string | number;\n}\n\ninterface SelectButtonProps {\n  onSelect: (user: LanguageOption) => void;\n  languageOptions: LanguageOption[];\n  stateId: string;\n}\n\nconst users: LanguageOption[] = [\n  {\n    name: \"English\",\n    label: \"English\",\n    id: 1,\n  },\n  {\n    name: \"Italian\",\n    label: \"Italian\",\n    id: 2,\n  },\n  {\n    name: \"French\",\n    label: \"French\",\n    id: 3,\n  },\n  {\n    name: \"German\",\n    label: \"German\",\n    id: 4,\n  },\n  {\n    name: \"Spanish\",\n    label: \"Spanish\",\n    id: 5,\n  },\n  {\n    name: \"Japanese\",\n    label: \"Japanese\",\n    id: 6,\n  },\n  {\n    name: \"Hebrew\",\n    label: \"Hebrew\",\n    id: 7,\n  },\n  {\n    name: \"Korean\",\n    label: \"Korean\",\n    id: 8,\n  },\n  {\n    name: \"Turkish\",\n    label: \"Turkish\",\n    id: 9,\n  },\n  {\n    name: \"Urdu\",\n    label: \"Urdu\",\n    id: 10,\n  },\n  {\n    name: \"Chinese\",\n    label: \"Chinese\",\n    id: 11,\n  },\n  {\n    name: \"Tagalog\",\n    label: \"Tagalog\",\n    id: 12,\n  },\n  {\n    name: \"Bahasa\",\n    label: \"Bahasa\",\n    id: 13,\n  },\n];\n\n/*const SelectUserButton: React.FunctionComponent<SelectButtonProps> = ({\n  onSelect,\n  languageOptions,\n  stateId,\n}) => {\n  const options: OptionTypeBase[] = languageOptions.map(\n    (user: LanguageOption) => ({\n      label: user.name,\n      value: user.id,\n    })\n  );\n\n  const handleChange = (\n    option: OptionTypeBase,\n    meta: ActionMeta<any>\n  ): void => {\n    console.log({ option, meta });\n    onSelect({\n      name: option.label,\n      id: option.value,\n    });\n  };\n\n  return (\n    <div className=\"select__user\">\n      <Select\n        name=\"user\"\n        options={options}\n        onChange={handleChange}\n        maxMenuHeight={120}\n        placeholder={stateId}\n        //defaultValue={}\n      />\n    </div>\n  );\n};*/\n\nexport default function LangSelector() {\n  const [currentUser, setCurrentUser] = useState(users[0]);\n\n  return (\n    <Select\n        //className=\"flex-1\"\n\n        options={users}\n        selectedOption={currentUser}\n        handelChange={(event) => {\n          console.log(\"parent\", event);\n          setCurrentUser(event);\n        }}\n      />\n    /*<SelectUserButton\n      stateId={stateId}\n      languageOptions={users}\n      onSelect={(user) => {\n        console.log(\"you have selected user \" + user.name);\n        Store.setLanguage(user.name);\n      }}\n    />*/\n  );\n}\n"]},"metadata":{},"sourceType":"module"}