{"ast":null,"code":"import { defaultMetadataStorage } from '../storage';\n/**\n * Specifies a type of the property.\n * The given TypeFunction can return a constructor. A discriminator can be given in the options.\n *\n * Can be applied to properties only.\n */\n\nexport function Type(typeFunction, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return function (target, propertyName) {\n    var reflectedType = Reflect.getMetadata('design:type', target, propertyName);\n    defaultMetadataStorage.addTypeMetadata({\n      target: target.constructor,\n      propertyName: propertyName,\n      reflectedType: reflectedType,\n      typeFunction: typeFunction,\n      options: options\n    });\n  };\n}","map":{"version":3,"sources":["../../../src/decorators/type.decorator.ts"],"names":[],"mappings":"AAAA,SAAS,sBAAT,QAAuC,YAAvC;AAGA;;;;;AAKG;;AACH,OAAM,SAAU,IAAV,CACJ,YADI,EAEJ,OAFI,EAEqB;AAAzB,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAyB;;AAEzB,SAAO,UAAU,MAAV,EAAuB,YAAvB,EAAoD;AACzD,QAAM,aAAa,GAAI,OAAe,CAAC,WAAhB,CAA4B,aAA5B,EAA2C,MAA3C,EAAmD,YAAnD,CAAvB;AACA,IAAA,sBAAsB,CAAC,eAAvB,CAAuC;AACrC,MAAA,MAAM,EAAE,MAAM,CAAC,WADsB;AAErC,MAAA,YAAY,EAAE,YAFuB;AAGrC,MAAA,aAAa,EAAA,aAHwB;AAIrC,MAAA,YAAY,EAAA,YAJyB;AAKrC,MAAA,OAAO,EAAA;AAL8B,KAAvC;AAOD,GATD;AAUD","sourcesContent":["import { defaultMetadataStorage } from '../storage';\nimport { TypeHelpOptions, TypeOptions } from '../interfaces';\n\n/**\n * Specifies a type of the property.\n * The given TypeFunction can return a constructor. A discriminator can be given in the options.\n *\n * Can be applied to properties only.\n */\nexport function Type(\n  typeFunction?: (type?: TypeHelpOptions) => Function,\n  options: TypeOptions = {}\n): PropertyDecorator {\n  return function (target: any, propertyName: string | Symbol): void {\n    const reflectedType = (Reflect as any).getMetadata('design:type', target, propertyName);\n    defaultMetadataStorage.addTypeMetadata({\n      target: target.constructor,\n      propertyName: propertyName as string,\n      reflectedType,\n      typeFunction,\n      options,\n    });\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}