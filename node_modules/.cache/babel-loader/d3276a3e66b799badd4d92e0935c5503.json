{"ast":null,"code":"import _applyDecoratedDescriptor from \"/run/media/pearlquest/DATA/rezdyV2/rezdy-ksa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _jsxFileName = \"/run/media/pearlquest/DATA/rezdyV2/rezdy-ksa/src/Components/VisitorDetails.tsx\",\n    _class,\n    _class2;\n\nimport { action } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { PureComponent } from \"react\";\nimport { BookingState } from \"../Enums/BookingState\";\nimport { BookingResource } from \"../System/Models/BookingResource\";\nimport { Customer } from \"../System/Models/Customer\";\nimport { Item } from \"../System/Models/Item\";\nimport { Participant, extra } from \"../System/Models/Participant\";\nimport { Quantity } from \"../System/Models/Quantity\";\nimport { locator } from \"../System/ServiceLocator\";\nimport { ApiService } from \"../System/Services/ApiService\";\nimport { Store } from \"../System/Stores\";\nimport { VisitorDetail } from \"./VisitorDetail\";\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let VisitorDetails = observer(_class = (_class2 = class VisitorDetails extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.visitorElements = [];\n    this.validationTable = [];\n    this.participants = [];\n    this.onValidationChanged = this.onValidationChanged.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.state = {\n      isValidated: false\n    };\n\n    if (this.visitorElements.length === 0) {\n      for (let i = 0; i < Store.visitorCount; i++) {\n        this.visitorElements.push( /*#__PURE__*/_jsxDEV(VisitorDetail, {\n          defaultExpanded: i === 0 ? true : false,\n          visitorIndex: i,\n          validationChanged: this.onValidationChanged,\n          dataChanged: this.onDataChanged\n        }, \"vd-\" + i.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, void 0));\n        this.validationTable.push({\n          key: \"vd-\" + i,\n          value: i === 0 ? false : true\n        });\n        this.participants.push(new Participant());\n      }\n    }\n  }\n\n  render() {\n    let selectedDateText = format(Store.selectedDate, \"MMMM do, yyyy H:mma\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-10 visitor-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Booking Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"KSA Pavilion Tour Guide Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Date: \", selectedDateText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), this.visitorElements, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row justify-center mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button return-btn\",\n          onClick: this.onReturn,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Return\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button finalize-btn\",\n          disabled: this.state.isValidated ? false : true,\n          onClick: this.onClick,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Book Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Please enter all the required fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n  async onReturn() {\n    Store.setBookingState(BookingState.Initial);\n  }\n\n  async onClick() {\n    if (Store.getSelectedDate() != null && this.participants.length > 0) {\n      var _Store$availableSessi, _Store$product;\n\n      let resource = new BookingResource();\n      let customer = new Customer();\n      let customerDelta = this.participants[0];\n      console.log(customerDelta.fields);\n      customerDelta.fields.forEach(field => {\n        if (field.label === \"Email\") customer.email = field.value;else if (field.label === \"First Name\") customer.firstName = field.value;else if (field.label === \"Last Name\") customer.lastName = field.value;else if (field.label === \"Mobile\") customer.phone = field.value;else if (field.label === \"Tour Guide Language\") customer.tourguideLanguage = Store.selectedLanguage;\n      });\n      resource.customer = customer;\n      let item = new Item();\n      item.amount = 0;\n      item.productCode = Store.product.code;\n      let cust_extras = new extra();\n      cust_extras.quantity = Store.Extras;\n      item.extras.push(cust_extras);\n      let selectedDate = Store.getSelectedDate();\n      let session = (_Store$availableSessi = Store.availableSessions) === null || _Store$availableSessi === void 0 ? void 0 : _Store$availableSessi.find(q => q.startTimeLocal.getTime() === selectedDate.getTime());\n      this.participants.forEach(value => {\n        value.fields.forEach(field => {\n          if (field.label === \"Tour Guide Language\") {\n            field.value = Store.selectedLanguage;\n          }\n        });\n      });\n      let extras = {\n        extras: [{\n          id: 170228,\n          quantity: Store.Extras\n        }]\n      };\n      item.startTime = session === null || session === void 0 ? void 0 : session.startTime;\n      item.participants = this.participants;\n      let quantities = Array();\n      (_Store$product = Store.product) === null || _Store$product === void 0 ? void 0 : _Store$product.priceOptions.forEach(priceOption => {\n        let quantity = new Quantity();\n        quantity.optionLabel = priceOption.label;\n        quantity.value = Store.visitorCount.toString(); //priceOption.seatsUsed;\n\n        quantities.push(quantity);\n      });\n      item.quantities = quantities;\n      resource.items.push(item);\n      const apiService = locator(ApiService);\n      await apiService.createBooking(resource).then(response => {\n        Store.setBookingState(BookingState.Aftermath);\n      }, error => {});\n    }\n  }\n\n  onValidationChanged(key, value) {\n    let keyPair = this.validationTable.find(q => q.key === key);\n\n    if (keyPair != null) {\n      keyPair.value = value;\n    }\n\n    let isValidated = !this.validationTable.some(q => q.value === false);\n    this.setState({\n      isValidated: isValidated\n    });\n  }\n\n  onDataChanged(index, participant) {\n    this.participants[index] = participant;\n  }\n\n}, (_applyDecoratedDescriptor(_class2.prototype, \"onClick\", [action], Object.getOwnPropertyDescriptor(_class2.prototype, \"onClick\"), _class2.prototype)), _class2)) || _class;","map":{"version":3,"sources":["/run/media/pearlquest/DATA/rezdyV2/rezdy-ksa/src/Components/VisitorDetails.tsx"],"names":["action","observer","React","PureComponent","BookingState","BookingResource","Customer","Item","Participant","extra","Quantity","locator","ApiService","Store","VisitorDetail","format","VisitorDetails","constructor","props","visitorElements","validationTable","participants","onValidationChanged","bind","onDataChanged","onClick","state","isValidated","length","i","visitorCount","push","toString","key","value","render","selectedDateText","selectedDate","onReturn","setBookingState","Initial","getSelectedDate","resource","customer","customerDelta","console","log","fields","forEach","field","label","email","firstName","lastName","phone","tourguideLanguage","selectedLanguage","item","amount","productCode","product","code","cust_extras","quantity","Extras","extras","session","availableSessions","find","q","startTimeLocal","getTime","id","startTime","quantities","Array","priceOptions","priceOption","optionLabel","items","apiService","createBooking","then","response","Aftermath","error","keyPair","some","setState","index","participant"],"mappings":"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","sourcesContent":["import { AxiosResponse } from \"axios\";\nimport { action } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport React, { PureComponent } from \"react\";\nimport { BookingState } from \"../Enums/BookingState\";\nimport { BookingResource } from \"../System/Models/BookingResource\";\nimport { Customer } from \"../System/Models/Customer\";\nimport { Item } from \"../System/Models/Item\";\n\nimport {\n  Participant,\n  Field,\n  extra,\n} from \"../System/Models/Participant\";\nimport { Quantity } from \"../System/Models/Quantity\";\nimport { locator } from \"../System/ServiceLocator\";\nimport { ApiService } from \"../System/Services/ApiService\";\nimport { Store } from \"../System/Stores\";\nimport { VisitorDetail } from \"./VisitorDetail\";\nimport { format } from \"date-fns\";\n\ninterface IProps {}\ninterface IState {\n  isValidated: boolean;\n}\n\ninterface KeyValuePair {\n  key: string;\n  value: boolean;\n}\n\n@observer\nexport class VisitorDetails extends PureComponent<IProps, IState> {\n  private visitorElements: JSX.Element[] = [];\n  private validationTable: KeyValuePair[] = [];\n\n  private participants: Participant[] = [];\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.onValidationChanged = this.onValidationChanged.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n    this.onClick = this.onClick.bind(this);\n\n    this.state = {\n      isValidated: false,\n    };\n\n    if (this.visitorElements.length === 0) {\n      for (let i = 0; i < Store.visitorCount; i++) {\n        this.visitorElements.push(\n          <VisitorDetail\n            key={\"vd-\" + i.toString()}\n            defaultExpanded={i === 0 ? true : false}\n            visitorIndex={i}\n            validationChanged={this.onValidationChanged}\n            dataChanged={this.onDataChanged}\n          />\n        );\n\n        this.validationTable.push({\n          key: \"vd-\" + i,\n          value: i === 0 ? false : true,\n        });\n\n        this.participants.push(new Participant());\n      }\n    }\n  }\n\n  render() {\n    let selectedDateText = format(Store.selectedDate!, \"MMMM do, yyyy H:mma\");\n    return (\n      <div className=\"pt-10 visitor-details\">\n        <div className=\"flex flex-col\">\n          <h1>Booking Details</h1>\n          <h2>KSA Pavilion Tour Guide Booking</h2>\n          <span>Date: {selectedDateText}</span>\n        </div>\n        {this.visitorElements}\n        <div className=\"flex flex-row justify-center mt-3\">\n          <button className=\"button return-btn\" onClick={this.onReturn}>\n            <span>Return</span>\n          </button>\n          <button\n            className=\"button finalize-btn\"\n            disabled={this.state.isValidated ? false : true}\n            onClick={this.onClick}\n          >\n            <span>Book Now</span>\n            <span>Please enter all the required fields</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  async onReturn() {\n    Store.setBookingState(BookingState.Initial);\n  }\n\n  @action\n  async onClick() {\n    if (Store.getSelectedDate() != null && this.participants.length > 0) {\n      let resource = new BookingResource();\n\n      let customer = new Customer();\n      let customerDelta = this.participants[0];\n\n      console.log(customerDelta.fields);\n\n      customerDelta.fields.forEach((field) => {\n        if (field.label === \"Email\") customer.email = field.value;\n        else if (field.label === \"First Name\") customer.firstName = field.value;\n        else if (field.label === \"Last Name\") customer.lastName = field.value;\n        else if (field.label === \"Mobile\") customer.phone = field.value;\n        else if (field.label === \"Tour Guide Language\")\n          customer.tourguideLanguage = Store.selectedLanguage;\n      });\n\n      resource.customer = customer;\n\n      let item = new Item();\n      item.amount = 0;\n      item.productCode = Store.product!.code;\n      let cust_extras = new extra();\n      cust_extras.quantity=Store.Extras;\n      item.extras.push(cust_extras);\n      \n\n\n      let selectedDate = Store.getSelectedDate()!;\n      let session = Store.availableSessions?.find(\n        (q) => q.startTimeLocal.getTime() === selectedDate.getTime()\n      );\n\n      this.participants.forEach((value: Participant) => {\n        value.fields.forEach((field) => {\n          if (field.label === \"Tour Guide Language\") {\n            field.value = Store.selectedLanguage;\n          }\n        });\n      });\n\n      let extras = { extras: [{ id: 170228, quantity: Store.Extras }] };\n\n      item.startTime = session?.startTime;\n      item.participants = this.participants;\n\n      let quantities = Array<Quantity>();\n\n      Store.product?.priceOptions.forEach((priceOption) => {\n        let quantity = new Quantity();\n\n        quantity.optionLabel = priceOption.label;\n        quantity.value = Store.visitorCount.toString(); //priceOption.seatsUsed;\n\n        quantities.push(quantity);\n      });\n\n      item.quantities = quantities;\n\n      resource.items.push(item);\n\n      const apiService = locator(ApiService);\n      await apiService.createBooking(resource).then(\n        (response) => {\n          Store.setBookingState(BookingState.Aftermath);\n        },\n        (error: AxiosResponse) => {}\n      );\n    }\n  }\n\n  onValidationChanged(key: string, value: boolean) {\n    let keyPair = this.validationTable.find((q) => q.key === key);\n\n    if (keyPair != null) {\n      keyPair.value = value;\n    }\n\n    let isValidated: boolean = !this.validationTable.some(\n      (q) => q.value === false\n    );\n\n    this.setState({\n      isValidated: isValidated,\n    });\n  }\n\n  onDataChanged(index: number, participant: Participant) {\n    this.participants[index] = participant;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}